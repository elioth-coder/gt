{% extends '@pages/System/base.html.twig' %}

{% block title %}SYS_MOD: NOTICE TO PROCEED - General Tinio, Nueva Ecija | The Official Website{% endblock title %}
{% block styles %}
  {{ parent() }}
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.css">
  {% include('@components/Common/markdown.style.twig') %}
{% endblock styles %}
{% block right_content %}
  <div class="flex flex-col p-10">
    <h1 class="text-center text-4xl">Module: Notice To Proceed</h1>
    <hr class="my-5">
    {{ include('@components/System/notice_to_proceed-table.html.twig', { 'barangays' : barangays }) }}
    <hr class="my-5">
    {{ include('@components/System/notice_to_proceed-form.html.twig') }}
  </div>
{% endblock right_content %}
{% block scripts %}
  {{ parent() }}
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      try {
        let table = new DataTable('#notice_to_proceed-table', {
          "columnDefs": [
            { "width": "3%", "targets": 0 },
            { "width": "20%", "targets": 1 },
            { "width": "10%", "targets": 2 },
            { "width": "10%", "targets": 3 },
            { "width": "10%", "targets": 4 },
            { "width": "10%", "targets": 5 },
          ]
        });
      } catch(e) {}
    });

    document.getElementById('date_issued').valueAsDate = new Date();

    file.onchange = (e) => {
      let extension;

      if (e.target.files && e.target.files[0]) {
        extension = e.target.files[0]['name'].split('.').pop();
        if(extension === "pdf"){
          prevFile.src = URL.createObjectURL(e.target.files[0]);
        }else{
          prevFile.src = '/assets/img/PreviewNotAvailable.jpg';
        }
      }
    };

    NoticeToProceedForm.onsubmit = async (e) => {
      e.preventDefault();

      let processingModal = Swal.fire({ 
        imageUrl: '/assets/img/loading.gif',
        title: 'Processing...',
        allowOutsideClick: false, 
        allowEscapeKey: false,          
        showConfirmButton: false
      });

      let hiddenIdInput = NoticeToProceedForm.querySelector('#id');
      let response = await fetch('/system/notice_to_proceed' + ((hiddenIdInput) ? ('/' + hiddenIdInput.value + '/update') : ''), {
        credentials: "same-origin",
        method: 'POST',
        body: new FormData(NoticeToProceedForm)
      });
      let {
        message,
        status
      } = await response.json();

      processingModal.close();
      if (status == 'success') {
        Swal.fire({
          icon: 'success',
          title: 'Success!',
          text: message,
          showConfirmButton: false,
          timer: 1500
        }).then(() => window.location.reload());
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Error!',
          text: message
        });
      }
    }

    function editNotice(data) {
      let { id, date_issued, title, details, category, status, file } = data;
      let hiddenIdInput = NoticeToProceedForm.querySelector('#id');
      let oldFileInput = NoticeToProceedForm.querySelector('#old_file');

      NoticeToProceedForm.querySelector('#file').removeAttribute('required');

      if(hiddenIdInput) {
        hiddenIdInput.value = id;
        oldFileInput.value = file
      } else {
        let idInput = document.createElement('input');

        idInput.setAttribute('type', 'hidden');
        idInput.setAttribute('id', 'id');
        idInput.setAttribute('name', 'id');
        idInput.value = id;
        NoticeToProceedForm.prepend(idInput);

        let oldFileInput = document.createElement('input');

        oldFileInput.setAttribute('type', 'hidden');
        oldFileInput.setAttribute('id', 'old_file');
        oldFileInput.setAttribute('name', 'old_file');
        oldFileInput.value = file;
        NoticeToProceedForm.prepend(oldFileInput);
      }

      let extension;

      extension = file.split('.').pop();
      if(extension === "pdf"){
        NoticeToProceedForm.querySelector('#prevFile').setAttribute('src', '/uploads/documents/notice-to-proceed/' + file);
      } else {
        NoticeToProceedForm.querySelector('#prevFile').setAttribute('src', '/assets/img/PreviewNotAvailable.jpg');
      }

      NoticeToProceedForm.querySelector('#date_issued').value = date_issued;
      NoticeToProceedForm.querySelector('#title').value = title;
      NoticeToProceedForm.querySelector('#details').value = details;
      NoticeToProceedForm.querySelector('#category').value = category;
      NoticeToProceedForm.querySelector('#status').value = status;
      NoticeToProceedForm.querySelector('#save-button').style.display = "none";
      NoticeToProceedForm.querySelector('#update-buttons').style.display = "inline-block";
    }

    function cancelEdit() {
      let hiddenIdInput = NoticeToProceedForm.querySelector('#id');
        hiddenIdInput.remove();
      let hiddenOldFileInput = NoticeToProceedForm.querySelector('#old_file');
        hiddenOldFileInput.remove();

      NoticeToProceedForm.querySelector('#file').setAttribute('required', true);

      let fileInput = NoticeToProceedForm.querySelector('#file');
      let newFileInput = document.createElement('input');

      newFileInput.setAttribute('type', 'file');
      newFileInput.setAttribute('id', 'file');
      newFileInput.setAttribute('name', 'file');
      newFileInput.setAttribute('accept', '.doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,.pdf,.xlsx, .xls, .csv');

      fileInput.replaceWith(newFileInput);
      
      document.querySelector('#file').onchange = (e) => {
        let extension;

        if (e.target.files && e.target.files[0]) {
          extension = e.target.files[0]['name'].split('.').pop();
          if(extension === "pdf"){
            prevFile.src = URL.createObjectURL(e.target.files[0]);
          }else{
            prevFile.src = '/assets/img/PreviewNotAvailable.jpg';
          }
        }
      }     

      NoticeToProceedForm.querySelector('#date_issued').valueAsDate = new Date();
      NoticeToProceedForm.querySelector('#title').value = "";
      NoticeToProceedForm.querySelector('#details').value = "";
      NoticeToProceedForm.querySelector('#category').value = "";
      NoticeToProceedForm.querySelector('#status').value = "";
      NoticeToProceedForm.querySelector('#prevFile').setAttribute('src', '/assets/img/PreviewNotAvailable.jpg');

      NoticeToProceedForm.querySelector('#save-button').style.display = "inline-block";
      NoticeToProceedForm.querySelector('#update-buttons').style.display = "none";
    }

    async function deleteNotice(id) {
      let result = await Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!'
      });

      if(result.isConfirmed) {
        let response = await fetch('/system/notice_to_proceed/' + id, {
          credentials: "same-origin",
          method: 'DELETE',
        });
        let {
          message,
          status
        } = await response.json();

        if (status == 'success') {
          Swal.fire({
            icon: 'success',
            title: 'Success!',
            text: message,
            showConfirmButton: false,
            timer: 1500
          }).then(() => window.location.reload()); 
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: message
          });
        }
      }
    }
  </script>
{% endblock scripts %}