{% extends '@pages/System/base.html.twig' %}

{% block title %}Creating Ordinances and Resolutions{% endblock title %}
{% block right_content %}
  <div class="flex flex-col p-10">
  <h1 class="text-center text-4xl">Module: Ordinances and Resolutions</h1>
  <hr class="my-5">
  {{ include('@components/System/ordinances_resolutions-table.html.twig') }}
  <hr class="my-5">
  {{ include('@components/System/ordinances_resolutions-form.html.twig') }}

  <style type="text/css">
    .swal-height{
      width: 80vh;
    }
  </style>
  </div>
{% endblock right_content %}
{% block scripts %}
  {{ parent() }}
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      try {
        let table1 = new DataTable('#ORs-table', {
          "columnDefs": [
            { "width": "10%", "targets": 0 },
            { "width": "8%", "targets": 2 },
            { "width": "8%", "targets": 3 },
            { "width": "5%", "targets": 4 },
            { "width": "5%", "targets": 5 },
            { "width": "8%", "targets": 6 },
            { "width": "5%", "targets": 7 }
          ]
        });
      } catch(e) {}
    });

    file.onchange = (e) => {
        if (e.target.files && e.target.files[0]) {
          extension = e.target.files[0]['name'].split('.').pop();
          if(extension === "pdf"){
            prevFile.src = URL.createObjectURL(e.target.files[0]);
          }else{
            prevFile.src = '/assets/img/PreviewNotAvailable.jpg';
          }
        }
    };

    function ORSetter(){
      var x = document.getElementById("category").value;
      if (x != '') {
        document.getElementById("ORno").disabled = false;
        document.getElementById("ORno_label").innerHTML = x + " No :"; 
      }else{
        document.getElementById("ORno").disabled = true;
        document.getElementById("ORno_label").innerHTML = "No :"; 
      }
    }

    const removeErrorMessage = (e) => {
      console.log("remove error message");

      $(e.target)
        .closest('.field-container')
        .find('.error-message')
        .addClass('hidden');
    }

    $(OrdinancesResolutionsForm).find('input').focus(removeErrorMessage);
    $(OrdinancesResolutionsForm).find('select').focus(removeErrorMessage);
    $(OrdinancesResolutionsForm).find('textarea').focus(removeErrorMessage);

    OrdinancesResolutionsForm.onsubmit = async (e) => {
      e.preventDefault();

      let processingModal = Swal.fire({ 
        imageUrl: '/assets/img/loading.gif',
        title: 'Processing...',
        allowOutsideClick: false, 
        allowEscapeKey: false,          
        showConfirmButton: false
      });
      let hiddenIdInput = OrdinancesResolutionsForm.querySelector('#id');
      let response = await fetch('/system/ordinances_resolutions' + ((hiddenIdInput) ? ('/' + hiddenIdInput.value + '/update') : ''), {
        credentials: "same-origin",
        method: 'POST',
        body: new FormData(OrdinancesResolutionsForm)
      });
      let {
        message,
        status,
        errors
      } = await response.json();

      processingModal.close();
      if (status == 'success') {
        Swal.fire({
          icon: 'success',
          title: 'Success!',
          text: message,
          showConfirmButton: false,
          timer: 1500
        }).then(() => window.location.reload());
      } else {
        console.log(errors)

        for(let key in errors) {
          let error = errors[key];

          for(let i in error) {
            $(`#container-${key}`).addClass('border-red-500');
            $(`#container-${key} .error-message`).removeClass('hidden');
            $(`#container-${key} .error-message`).html(error[i]);
          }
        }

        Swal.fire({
          icon: 'error',
          title: 'Error!',
          text: 'An error occured!'
        });
      }
    };

    function editBid(data) {
      let { id, category, ORno, title, author, com_incharged, date_approved, status, file } = data;

      let hiddenIdInput = OrdinancesResolutionsForm.querySelector('#id');
      let oldFileInput = OrdinancesResolutionsForm.querySelector('#old_file');

      if(hiddenIdInput) {
        hiddenIdInput.value = id;
        oldFileInput.value = file;
      } else {
        let idInput = document.createElement('input');

        idInput.setAttribute('type', 'hidden');
        idInput.setAttribute('id', 'id');
        idInput.setAttribute('name', 'id');
        idInput.value = id;
        OrdinancesResolutionsForm.prepend(idInput);

        let oldFileInput = document.createElement('input');

        oldFileInput.setAttribute('type', 'hidden');
        oldFileInput.setAttribute('id', 'old_file');
        oldFileInput.setAttribute('name', 'old_file');
        oldFileInput.value = file;
        OrdinancesResolutionsForm.prepend(oldFileInput);
      }

      extension = file.split('.').pop();
      if(extension === "pdf"){
        OrdinancesResolutionsForm.querySelector('#prevFile').setAttribute('src', '/uploads/documents/OrdiReso/' + file);
      } else {
        OrdinancesResolutionsForm.querySelector('#prevFile').setAttribute('src', '/assets/img/PreviewNotAvailable.jpg');
      }

      OrdinancesResolutionsForm.querySelector('#category').value = category;
      OrdinancesResolutionsForm.querySelector('#ORno').value = ORno;
      OrdinancesResolutionsForm.querySelector('#title').value = title;
      OrdinancesResolutionsForm.querySelector('#author').value = author;
      OrdinancesResolutionsForm.querySelector('#com_incharged').value = com_incharged;
      OrdinancesResolutionsForm.querySelector('#status').value = status;
      ORSetter();
      let dt = new Date(date_approved);

      OrdinancesResolutionsForm.querySelector('#date_approved').value = `${date_format(dt, 'Y-m-d')}`;

      OrdinancesResolutionsForm.querySelector('#save-button').style.display = "none";
      OrdinancesResolutionsForm.querySelector('#update-buttons').style.display = "inline-block";
    };

    function cancelEdit() {
      let hiddenIdInput = OrdinancesResolutionsForm.querySelector('#id');
        hiddenIdInput.remove();
      let hiddenOldFileInput = OrdinancesResolutionsForm.querySelector('#old_file');
        hiddenOldFileInput.remove();
      let fileInput = OrdinancesResolutionsForm.querySelector('#file');
      let newFileInput = document.createElement('input');

      newFileInput.setAttribute('type', 'file');
      newFileInput.setAttribute('id', 'file');
      newFileInput.setAttribute('name', 'file');
      newFileInput.setAttribute('accept', '.doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,.pdf,.xlsx, .xls, .csv');

      fileInput.replaceWith(newFileInput);
      document.querySelector('#file').onchange = (e) => {
        if (e.target.files && e.target.files[0]) {
          prevFile.src = URL.createObjectURL(e.target.files[0]);
        }
      }
      
      OrdinancesResolutionsForm.querySelector('#category').value = "";
      OrdinancesResolutionsForm.querySelector('#ORno').value = "";
      OrdinancesResolutionsForm.querySelector('#title').value = "";
      OrdinancesResolutionsForm.querySelector('#author').value = "";
      OrdinancesResolutionsForm.querySelector('#com_incharged').value = "";
      OrdinancesResolutionsForm.querySelector('#status').value = "";
      ORSetter();
      OrdinancesResolutionsForm.querySelector('#prevFile').setAttribute('src', '/assets/img/PreviewNotAvailable.jpg');

      OrdinancesResolutionsForm.querySelector('#save-button').style.display = "inline-block";
      OrdinancesResolutionsForm.querySelector('#update-buttons').style.display = "none";
    };

    async function deleteBid(id) {
      let result = await Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!'
      });

      if(result.isConfirmed) {
        let response = await fetch('/system/ordinances_resolutions/' + id, {
          credentials: "same-origin",
          method: 'DELETE',
        });
        let {
          message,
          status
        } = await response.json();

        if (status == 'success') {
          Swal.fire({
            icon: 'success',
            title: 'Success!',
            text: message,
            showConfirmButton: false,
            timer: 1500
          }).then(() => window.location.reload()); 
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: message
          });
        }
      }
    }
  </script>
{% endblock scripts %}